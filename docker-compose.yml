version: '3.3'
# VERSION 20201020

services:
  hub_xxx:
    image: jupyterhub_vre:20201020
    restart: always
    expose:
      - 8000
    volumes:
      # Docker Socket (needed to spawn containers)
      - /var/run/docker.sock:/var/run/docker.sock
      # Config:
      - ./jupyterhub_config.py:/srv/jupyterhub/jupyterhub_config.py
      # Where NextCloud accounts will be mounted:
      - ${HOST_WHERE_ARE_USERDIRS}:/usr/share/userdirectories/:rw
    cap_add:
      - SYS_ADMIN
    networks:
      - vre
    environment:
      #LOG_LEVEL: 'DEBUG'
      # User directories will be chowned to these uid:gid, unless they exist.
      # Jupyter Notebooks will run as these uid:gid.
      RUN_AS_USER: ${RUN_AS_USER}     # usually 1000
      RUN_AS_GROUP: ${RUN_AS_GROUP}   # usually 1000
      # Where are the user directories on the host file system:
      HOST_WHERE_ARE_USERDIRS: ${HOST_WHERE_ARE_USERDIRS}
      USERDIR_IN_CONTAINER: ${USERDIR_IN_CONTAINER}
      USERDIR_TEMPLATE_HOST: ${USERDIR_TEMPLATE_HOST}
      MOUNT_USER_DIRS: 'true'
      # Where to authenticate users:
      AUTH_URL: ${AUTH_URL}
      WHITELIST_AUTH: 'https://vre.seadatanet.org;https://sdc-test.argo.grnet.gr'
      ADMIN_PW: ${ADMIN_PW}
      # Which image to run:
      DOCKER_JUPYTER_IMAGE: ${DOCKER_JUPYTER_IMAGE}
      # How to call the containers:
      CONTAINER_PREFIX: ${CONTAINER_PREFIX}
      # Under which URL is this reachable? host:port/BASE_URL/
      BASE_URL: ${BASE_URL}   # this must be in the dashboard, and in nginx config!
      # Network config:
      DOCKER_NETWORK_NAME: vre
      HUB_IP: ${HUB_IP}   # this is this service's name!
      JUPYTERHUB_CRYPT_KEY: ${JUPYTERHUB_CRYPT_KEY} # create by: "openssl rand -hex 32"
      SSL_OFF: 'true'
      HTTP_TIMEOUT: 60
      # Misc:
      MEMORY_LIMIT: ${MEMORY_LIMIT}
      SHUTDOWN_ON_LOGOUT: 'false'
      # ERDDAP and possibly others:
      # Comment out or remove if not needed!
      JAVA_OPTS: ${JAVA_OPTS}
      HOST_NAME: ${HOST_NAME}
      PORT_NAME: '443'
      SERVICE_PORT_IN_CONTAINER: ${SERVICE_PORT_IN_CONTAINER}
      FILESELECTOR_URL: ${FILESELECTOR_URL}

    labels:
    - "JupyterHub"

# Using an external network, because we need to pass the network name to the
# docker spawner, and if we use an internal one, its name will be prefixed by the
# compose stack's name.
networks:
  vre:
    external: true

