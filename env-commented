### Service XXX
### Running on XXX
### Using synchronized Nextcloud OR
### Using NFS-mounted Nextcloud (with original directory structure)
### 20201020

### See: https://docs.docker.com/compose/env-file/

### For more details, check the docker-compose.yml and the jupyterhub_config.py!

HOST_WHERE_ARE_USERDIRS= Where are user dirs contained? Will be bind-mounted. No pending slashes please!
RUN_AS_USER= Run as which user # Tell spawned Notebooks to run as this uid. This only works automatically with Notebooks, other spawned containers have to implement this! This also affects the ownership of created files. If you put 33, you may have to adapt the entrypoint too.
RUN_AS_GROUP= Run as which group # Tell spawned Notebooks to run as this gid. This only works automatically with Notebooks, other spawned containers have to implement this! This also affects the ownership of created files. If you put 33, you may have to adapt the entrypoint too.
USERDIR_TEMPLATE_HOST= Name of the user directory (inside HOST_WHERE_ARE_USERDIRS) that will be bind-mounted into the spawned containers. See two options: 
USERDIR_TEMPLATE_HOST=/{raw_username}/files # When using original NextCloud dir structure, e.g. using NFS-mounted NextCloud data. Because we only want to make /files subdirectory available to the users.
# --> Original NextCloud dir structure, as we mount via NFS
USERDIR_TEMPLATE_HOST=/{raw_username}       # When using the synced NextCloud, as we synchronize already the /files subdirectory.
# --> dir structure of synced NextCloud data
USERDIR_IN_CONTAINER= Where the userdata will be bind-mounted to, in the spawned containers. In JupyterNotebooks, this tends to be some subdirectory of /home/jovyan/work/. 
AUTH_URL= The URL where the authentication module asks for authentication.
ADMIN_PW= Some password with which you can login without Marine-Id.
DOCKER_JUPYTER_IMAGE= The image to be spawned. Must be pulled beforehand.
CONTAINER_PREFIX= How to name the containers: <CONTAINER_PREFIX>-<USERNAME>
BASE_URL= Where does the service sit? The pathname that is added to the FQDN. This must be in the dashboard, and in nginx config!!
HUB_IP= The name of the hub service, found in docker-compose.yml, line 5.
JUPYTERHUB_CRYPT_KEY= A string, created by: "openssl rand -hex 32"
MEMORY_LIMIT=5G The memory limit to be given to the container.

# Not needed for DIVA:
JAVA_OPTS= Java options passed to ERDDAP
HOST_NAME= ERDDAP needs to know its host name (FQDN)
SERVICE_PORT_IN_CONTAINER= Where does the service run inside the container? JupyterHub by default expects services to run at 8888, so we must tell JHub where to access it instead. E.g. ERDDAP always runs on port 8091 inside the container.
FILESELECTOR_URL= Any service that uses the file selector can find its URL here (at the moment, only ERDDAP)
